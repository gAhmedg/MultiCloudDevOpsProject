@Library('shared-library') _

pipeline {


    environment {

        imageName = 'algn48/spring-boot-app'
        yamlfiles = 'kubernetes/Deploument.yml'

         }

    agent { label 'slave2' }
    
    
    stages {
        
         stage('Verify Branch') {
            steps {
                echo "$GIT_BRANCH"
            }
        }
                stage('List Tasks') {
                            steps {
                                sh '''
                                    cd Application
                                    chmod +x ./gradlew
                                    ./gradlew tasks
                                    '''
                            }
                        }
                        
                stage('build') {
                            steps {
                            script{
                                sh '''
                                    cd Application
                                    chmod +x ./gradlew
                                      ./gradlew build '''                              
                            }
                            }
                        }

                stage('test') {
                    steps {
                    script{
                        sh '''
                            cd Application
                            chmod +x ./gradlew
                            ./gradlew test 
                        '''
                        
                    }
                    }
                }

        stage('SonarQube Analysis') {
            steps {
               withSonarQubeEnv(credentialsId: 'jenkins-sonar',installationName: 'sq1') {
                    sh '''
                                    cd Application
                                    chmod +x ./gradlew
                                    ./gradlew sonarqube --info
                        '''
                    }
            }
        }
  
        stage('Build and Push Docker Image') {
            steps {
                sh "echo done "
            buildPushtoHub([
            image: "${imageName}:${BUILD_NUMBER}",
            DockerCredentials: 'DOCKERHUB',
            dockerfile: 'Application/Dockerfile', // Optional: Specify the path to the Dockerfile
            context: 'Application' // Optional: Specify the build context directory
                 ]) 
                  }  
                  }




        stage('Check and Install OpenShift CLI') {
    steps {
        script {
            
                sh "chmod +x scripts/install-oc.sh"
                sh "./scripts/install-oc.sh"
                sh 'oc version'
            
        }
    }
}

                stage('Deploy in cluster') {
        steps {
            sh "ls"
             sh 'sed -i "s|image:.*|image: ${imageName}:${BUILD_NUMBER}|" ${yamlfiles} '
             sh "kubectl apply -f ${yamlfiles} "
             sh "kubectl get all"
                }
           
}


    }
}
