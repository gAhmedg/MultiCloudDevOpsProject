@Library('shared-library') _

agent {
        label 'slave2'
    }
pipeline {
    environment {
        imageName = 'algn48/spring-boot-app'
    }

    agent any

    stages {
        stage('Verify Branch') {
            steps {
                echo "$GIT_BRANCH"
            }
        }



        stage('SonarQube Analysis') {

            steps {
               withSonarQubeEnv(credentialsId: 'jenkins-sonar',installationName: 'sq1') {
                 sh '   chmod +x gradlew  '
                //  sh ' gradle wrapper'
                    sh "./gradlew sonarqube"
                    }
            }
        }
 

  
                    
                




        stage('build') {
            steps {
               script{
                    sh '   chmod +x gradlew  '
        
                    sh '  ./gradlew build '
                
               }
            }
        }

        stage('test') {
            steps {
               script{
                    sh '  chmod +x gradlew  '
                             
                     sh '  ./gradlew test '


                
               }
            }
        }

        
        stage('Build and Push Docker Image') {
            steps {
                script {
                    buildPushtoHub([ image: "${imageName}:${BUILD_NUMBER}", DockerCredentials: 'DOCKERHUB' ])
                } 
            }
        }
        //         stage('kubernetes') {
        //     steps {
        //        withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: '', contextName: '', credentialsId: '4', namespace: 'ahmedgomaa', serverUrl: 'https://api.ocp-training.ivolve-test.com:6443']]) {    
        //          sh 'kubectl apply -f DeplymentAndSvc.yml -n ahmedgomaa'
                 
        //     }
        //     }
        // }






    }
}
